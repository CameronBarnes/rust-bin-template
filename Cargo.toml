[package]
name = "{{project-name}}"
version = "0.1.0"
edition = "2021"

[lints.rust]
unsafe_code = "forbid"

[lints.clippy]
enum_glob_use = "deny"
pedantic = "deny"
nursery = "deny"

[profile.release]
opt-level = 3 # change to s to reduce binary size with a performance tradeoff
lto = "fat"
codegen-units = 1
panic = 'abort'
strip = "symbols"

[build]
rustflags = [
"-C", 
# Improves performance while sacrificing compatibility
#"target-cpu=native",
#Pick one of the two following options, prefer mold if available
"link-arg=-fuse-ld=lld", 
#"link-arg=-fuse-ld=mold"

# Nightly
    "-Zshare-generics=y",
    "-Zthreads=0",
]

[dependencies]
itertools = "0.13"

#clap = { version = "4.5", features = ["derive"] }

tracing = "0.1"
tracing-subscriber = "0.3"

anyhow = "1.0"
#thiserror = "1.0" # This should be used with custom error types any time the error needs to contain data that we want to use

#derive_more = { # I find this covers a lot of enum boilerplate
#    version = "1.0",
#	features = [ # Enable as needed
		#"display",
		#"is_variant",
		#"from", "try_from",
		#"into", "try_into",
		#"deref", "deref_mut",
#	]
#}
# Enable one of the following if this program uses hashmaps
#rustc-hash = "2.0" # Poor quality but very high integer performance
#ahash = "0.8" # Should be used most of the time instead of the default HashMap implementation
